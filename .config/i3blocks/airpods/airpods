#!/usr/bin/env bash

device=$1
symbol='ï€¥'

service_running=$(systemctl is-active "bluetooth.service")
controller_on=$(bluetoothctl show | grep "Powered: yes")
device_paired=$(bluetoothctl devices Paired | grep $device)
device_connected=$(bluetoothctl info $device | grep "Connected: yes")
device_blocked=$(bluetoothctl info $device | grep "Blocked: yes")

status_str() {
    if [[ $service_running ]] && [[ $controller_on ]] && [[ $device_paired ]]; then
        if [[ $device_connected ]]; then
            echo "<span color=\"#55aa55\">${symbol}</span>"
    
        elif [[ $controller_on ]] && [[ ! $device_blocked ]];then
            echo "<span color=\"#fabd2f\">${symbol}</span>"
        else
            echo "<span foreground=\"white\">${symbol}</span>"
        fi
    else
        echo "<span color=\"#928374\">${symbol}</span>"
    fi
}

toggle_state() {
    if [[ ! $device_paired ]];then
      return 1
    fi

    if [[ $device_connected ]]; then
        bluetoothctl disconnect $device
        bluetoothctl block $device
    elif [[ $controller_on ]] && [[ ! $device_blocked ]];then
        bluetoothctl connect $device
    elif [[ $controller_on ]] && [[ $device_blocked ]];then
        bluetoothctl unblock $device
        bluetoothctl connect $device
    else
        bluetoothctl power on
        bluetoothctl unblock $device
        bluetoothctl connect $device
    fi
}

maybe_block() {
    if [[ $controller_on ]] && [[ $device_paired ]] && [[ ! $device_connected ]] && [[ ! $device_blocked ]];then
        bluetoothctl block $device
    fi
}

if [ -z "$BLOCK_BUTTON" ]; then
    status_str 
elif [ -z "$BLOCK_BUTTON" -eq -1 ]; then
    maybe_block 
elif [ "$BLOCK_BUTTON" -eq 1 ]; then
    toggle_state
fi

